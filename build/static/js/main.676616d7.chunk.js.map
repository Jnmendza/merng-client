{"version":3,"sources":["images/bg.svg","images/welcome.png","serviceWorker.js","context/auth.js","util/AuthRoute.js","components/MenuBar.js","util/MyPopup.js","components/LikeButton.js","util/graphql.js","components/DeleteButton.js","components/PostCard.js","util/hooks.js","components/PostForm.js","pages/Home.js","images/logo.svg","pages/Login.js","pages/Register.js","pages/SinglePost.js","App.js","ApolloProvider.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","Object","objectSpread2","payload","AuthProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","assign","value","setItem","token","AuthRoute","_ref","Component","component","rest","objectWithoutProperties","useContext","react_router","render","to","MenuBar","_useContext","pathName","pathname","path","substr","_useState","useState","_useState2","activeItem","setActiveItem","handleItemClick","e","name","Menu","pointing","secondary","size","color","Item","username","active","as","Link","position","onClick","MyPopup","content","children","Popup","inverted","trigger","LIKE_POST_MUTATION","gql","_templateObject","LikeButton","_ref$post","post","id","likeCount","likes","liked","setLiked","useEffect","find","like","_useMutation","useMutation","variables","postId","likePost","likeButton","Button","Icon","basic","labelPosition","util_MyPopup","Label","FETCH_POSTS_QUERY","graphql_templateObject","DELETE_POST_MUTATION","DeleteButton_templateObject","DELETE_COMMENT_MUTATION","_templateObject2","DeleteButton","commentId","callback","confirmOpen","setConfirmOpen","mutation","update","proxy","data","readQuery","query","getPosts","filter","writeQuery","deletePostOrMutation","Fragment","floated","style","margin","Confirm","open","onCancel","onConfirm","PostCard","body","createdAt","commentCount","Card","fluid","Content","Image","src","Header","Meta","concat","moment","fromNow","Description","extra","components_LikeButton","components_DeleteButton","useForm","arguments","length","undefined","values","setValues","onChange","event","defineProperty","target","onSubmit","preventDefault","CREATE_POST_MUTATION","PostForm_templateObject","PostForm","_useForm","createPost","result","toConsumableArray","_useMutation2","error","Form","Field","Input","placeholder","className","marginBottom","graphQLErrors","message","Home","_useQuery","useQuery","loading","posts","Grid","columns","Row","Column","components_PostForm","Transition","Group","map","key","components_PostCard","_extends","i","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","data-name","d","logo_SvgLogo","svgRef","viewBox","ref","ForwardRef","forwardRef","useStyles","makeStyles","theme","boxContainer","backgroundImage","BG","backgroundPosition","backgroundRepeat","backgroundSize","width","height","paper","display","flexDirection","alignItems","avatar","spacing","form","marginTop","submit","Copyright","Typography","variant","align","href","getFullYear","LOGIN_USER","Login_templateObject","Login","classes","context","errors","setErrors","loginUser","password","_","history","push","onError","err","extensions","exception","Box","CssBaseline","Grid_Grid","container","item","xs","SvgIcon","noValidate","TextField","label","autoComplete","autoFocus","fullWidth","required","FormControlLabel","control","Checkbox","Button_Button","mt","gridItem","REGISTER_USER","Register_templateObject","Register","addUser","email","confirmPassword","register","SUBMIT_COMMENT_MUTATION","SinglePost_templateObject","FETCH_POST_QUERY","SinglePost_templateObject2","SinglePost","postMarkup","params","commentInputRef","useRef","comment","setComment","getPost","current","blur","submitComment","comments","float","console","log","disabled","trim","App","react_router_dom","components_MenuBar","exact","util_AuthRoute","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","cache","InMemoryCache","ApolloProvider","react_common_esm","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.676616d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.ec8b298f.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome.f0fb2609.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default AuthRoute;","import React, { useContext, useState } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth'\n\nconst MenuBar = () => {\n    const { user, logout } = useContext(AuthContext);\n    const pathName = window.location.pathname;\n    const path = pathName === '/' ? 'home' : pathName.substr(1);\n    const [activeItem, setActiveItem ] = useState(path);\n\n    const handleItemClick = (e, { name }) => setActiveItem(name)\n\n    const menuBar = user ? (\n      <Menu pointing secondary size=\"massive\" color=\"teal\">\n          <Menu.Item\n            name={user.username}\n            active\n            as={Link}\n            to=\"/\"\n          />\n          \n          <Menu.Menu position='right'>\n            <Menu.Item\n            name='logout'\n            onClick={logout}\n            />\n          </Menu.Menu>\n        </Menu>\n    ) : (\n      <Menu pointing secondary size=\"massive\" color=\"teal\">\n          <Menu.Item\n            name='home'\n            active={activeItem === 'home'}\n            onClick={handleItemClick}\n            as={Link}\n            to=\"/\"\n          />\n          \n          <Menu.Menu position='right'>\n            <Menu.Item\n            name='login'\n            active={activeItem === 'login'}\n            onClick={handleItemClick}\n            as={Link}\n            to=\"/login\"\n            />\n            <Menu.Item\n              name='register'\n              active={activeItem === 'register'}\n              onClick={handleItemClick}\n              as={Link}\n              to=\"/register\"\n            />\n          </Menu.Menu>\n        </Menu>\n    )\n\n    return menuBar;\n  }\n\n\nexport default MenuBar","import { Popup } from 'semantic-ui-react';\nimport React from 'react';\n\nfunction MyPopup({ content, children }) {\n  return <Popup inverted content={content} trigger={children} />;\n}\n\nexport default MyPopup;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Label, Icon } from 'semantic-ui-react';\n\nimport MyPopup from '../util/MyPopup';\n\nfunction LikeButton({ user, post: { id, likeCount, likes } }) {\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    if (user && likes.find((like) => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, likes]);\n\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    variables: { postId: id }\n  });\n\n  const likeButton = user ? (\n    liked ? (\n      <Button color=\"teal\">\n        <Icon name=\"heart\" />\n      </Button>\n    ) : (\n      <Button color=\"teal\" basic>\n        <Icon name=\"heart\" />\n      </Button>\n    )\n  ) : (\n    <Button as={Link} to=\"/login\" color=\"teal\" basic>\n      <Icon name=\"heart\" />\n    </Button>\n  );\n\n  return (\n    <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\n      <MyPopup content={liked ? 'Unlike' : 'Like'}>{likeButton}</MyPopup>\n      <Label basic color=\"teal\" pointing=\"left\">\n        {likeCount}\n      </Label>\n    </Button>\n  );\n}\n\nconst LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!) {\n    likePost(postId: $postId) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }\n`;\n\nexport default LikeButton;","import gql from 'graphql-tag';\n\nexport const FETCH_POSTS_QUERY = gql`\n  {\n    getPosts {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\n\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nimport MyPopup from '../util/MyPopup';\n\nfunction DeleteButton({ postId, commentId, callback }) {\n  const [confirmOpen, setConfirmOpen] = useState(false);\n\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n\n  const [deletePostOrMutation] = useMutation(mutation, {\n    update(proxy) {\n      setConfirmOpen(false);\n      if (!commentId) {\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        });\n        data.getPosts = data.getPosts.filter((p) => p.id !== postId);\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n      }\n      if (callback) callback();\n    },\n    variables: {\n      postId,\n      commentId\n    }\n  });\n  return (\n    <>\n      <MyPopup content={commentId ? 'Delete comment' : 'Delete post'}>\n        <Button\n          as=\"div\"\n          color=\"red\"\n          floated=\"right\"\n          onClick={() => setConfirmOpen(true)}\n        >\n          <Icon name=\"trash\" style={{ margin: 0 }} />\n        </Button>\n      </MyPopup>\n      <Confirm\n        open={confirmOpen}\n        onCancel={() => setConfirmOpen(false)}\n        onConfirm={deletePostOrMutation}\n      />\n    </>\n  );\n}\n\nconst DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`;\n\nconst DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default DeleteButton;","import React, { useContext } from 'react';\nimport { Button, Card, Icon, Label, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { AuthContext } from '../context/auth';\nimport LikeButton from './LikeButton';\nimport DeleteButton from './DeleteButton';\nimport MyPopup from '../util/MyPopup';\n\nfunction PostCard({\n  post: { body, createdAt, id, username, likeCount, commentCount, likes }\n}) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Image\n          floated=\"right\"\n          size=\"mini\"\n          src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n        />\n        <Card.Header>{username}</Card.Header>\n        <Card.Meta as={Link} to={`/posts/${id}`}>\n          {moment(createdAt).fromNow(true)}\n        </Card.Meta>\n        <Card.Description>{body}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <LikeButton user={user} post={{ id, likes, likeCount }} />\n        <MyPopup content=\"Comment on post\">\n          <Button labelPosition=\"right\" as={Link} to={`/posts/${id}`}>\n            <Button color=\"blue\" basic>\n              <Icon name=\"comments\" />\n            </Button>\n            <Label basic color=\"blue\" pointing=\"left\">\n              {commentCount}\n            </Label>\n          </Button>\n        </MyPopup>\n        {user && user.username === username && <DeleteButton postId={id} />}\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default PostCard;","import { useState } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};","import React from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { useForm } from '../util/hooks';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\n\nfunction PostForm() {\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\n    body: ''\n  });\n\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n      values.body = '';\n    }\n  });\n\n  function createPostCallback() {\n    createPost();\n  }\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <h2>Create a post:</h2>\n        <Form.Field>\n          <Form.Input\n            placeholder=\"Hi World!\"\n            name=\"body\"\n            onChange={onChange}\n            value={values.body}\n            error={error ? true : false}\n          />\n          <Button type=\"submit\" color=\"teal\">\n            Submit\n          </Button>\n        </Form.Field>\n      </Form>\n      {error && (\n        <div className=\"ui error message\" style={{ marginBottom: 20 }}>\n          <ul className=\"list\">\n            <li>{error.graphQLErrors[0].message}</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!) {\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default PostForm;","import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\n\nfunction Home() {\n  const { user } = useContext(AuthContext);\n  const {\n    loading,\n    data: { getPosts: posts }\n  } = useQuery(FETCH_POSTS_QUERY);\n\n  return (\n    <Grid columns={3}>\n      <Grid.Row className=\"page-title\">\n        <h1>Recent Posts</h1>\n      </Grid.Row>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>Loading posts..</h1>\n        ) : (\n          <Transition.Group>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#ef476f;}.cls-2{fill:#06d6a0;}.cls-3{fill:#ffd166;}.cls-4{fill:#26547c;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M379.82,363.39,74.36,404.11V323.18l243.75-32.5c9.1-.62,19.1,2.46,24.89,10.76Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M454.18,71V414.51l-36.82-42.05c-6.84-7.21-15.7-11.56-24.89-10.76l-12.65,1.69V80.63Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M379.82,0V80.63L127.08,113.29a32.72,32.72,0,0,0-3.56.63C96.38,120.48,74.36,141,74.36,173V323.18L0,333.09V102C0,69.27,22.84,47.17,50.94,42.5Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M36.52,514.1h-20v20.81H3.19V464.2c11.11,0,22.22-.1,33.33-.1C71.07,464.1,71.17,514.1,36.52,514.1Zm-20-12.22h20c17.07,0,17-25.05,0-25.05h-20Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M141,500c-.2,18.28-11.41,36.56-36.26,36.56s-36.37-17.88-36.37-36.46,11.92-37.28,36.37-37.28S141.16,481.47,141,500Zm-59.49.3c.3,11.62,6.56,24,23.23,24s22.93-12.53,23.13-24.14c.2-11.92-6.46-25.25-23.13-25.25S81.16,488.34,81.47,500.26Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M196.41,481.27c-2.42-4-9.09-7.88-16.77-7.88-9.89,0-14.64,4.14-14.64,9.39,0,6.17,7.27,7.88,15.76,8.89,14.74,1.82,28.48,5.66,28.48,22.53,0,15.76-13.94,22.52-29.7,22.52-14.44,0-25.55-4.44-30.81-17.37l11.12-5.76c3.13,7.78,11.31,11.22,19.9,11.22,8.38,0,16.26-2.94,16.26-10.61,0-6.67-7-9.4-16.37-10.41-14.44-1.71-27.77-5.55-27.77-21.41,0-14.55,14.34-20.51,27.37-20.61,11,0,22.43,3.13,27.78,14Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M237.82,476.32H215.4V464.2h58.18v12.12H251.16v58.59H237.82Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M281.76,534.91V464.2H295v70.71Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M345.9,535.21H332.06l-29.39-71h14.95l21.31,55.05,21.42-55.05H375.3Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-4\",\n  d: \"M433.68,521.57h-37l-6.06,13.34H376.2l31.72-70.71h14.55l31.71,70.71H439.64Zm-18.49-42.52-13.13,30.1h26.26Z\"\n})));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 454.18 536.72\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.dcacab56.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport BG from '../images/bg.svg'\nimport { ReactComponent as Logo } from '../images/logo.svg'\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { \n  SvgIcon, \n  Button, \n  TextField, \n  FormControlLabel,\n  Checkbox, \n  Link, \n  Grid, \n  Box, \n  Typography} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  boxContainer: {\n    backgroundImage: `url(${BG})`,\n    backgroundPosition: 'center', /* Center the image */\n    backgroundRepeat: 'no-repeat', /* Do not repeat the image */\n    backgroundSize: 'cover',\n    width: '100%',\n    height: '100vh',\n    margin: 'auto'\n  },\n  paper: {\n    width: '50%',\n    margin: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(2),\n    width: 156,\n    height: 156\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nfunction Login(props) {\n  const classes = useStyles()\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n\n  const [loginUser] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }\n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <Box className={classes.boxContainer} >\n      <CssBaseline />\n      <Grid container  >\n        <Grid item xs={6} style={{ margin: '13rem 0' }}>\n          <div className={classes.paper}>\n            <SvgIcon className={classes.avatar}>\n              <Logo />\n            </SvgIcon>\n            <form onSubmit={onSubmit} className={classes.form} noValidate>\n              <TextField\n                margin= 'normal'\n                variant=\"outlined\"\n                label=\"Username\"\n                placeholder=\"Username..\"\n                name=\"username\"\n                type=\"text\"\n                value={values.username}\n                error={errors.username ? true : false}\n                onChange={onChange}\n                autoComplete=\"email\"\n                autoFocus\n                fullWidth\n              />\n              <TextField\n                margin= 'normal'\n                id=\"outlined-basic\"\n                variant=\"outlined\"\n                label=\"Password\"\n                placeholder=\"Password..\"\n                name=\"password\"\n                type=\"password\"\n                value={values.password}\n                error={errors.password ? true : false}\n                onChange={onChange}\n                required\n                fullWidth\n                \n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Login\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n            {Object.keys(errors).length > 0 && (\n              <div className=\"ui error message\">\n                <ul className=\"list\">\n                  {Object.values(errors).map((value) => (\n                    <li key={value}>{value}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Grid>             \n\n        <Grid item xs={6}>\n        </Grid> \n      </Grid>\n    </Box>\n  );\n}\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Login;","import React, { useContext, useState } from 'react';\nimport { \n  TextField, \n  Button, \n  Grid, \n  Link, \n  SvgIcon,\n } from '@material-ui/core';\n\nimport { ReactComponent as Logo } from '../images/logo.svg'\n\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BG from '../images/welcome.png'\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    backgroundImage: `url(${BG})`,\n    backgroundSize: 'cover',\n    width: '100%',\n    height: '100vh',\n    margin: 'auto'\n  },\n  boxContainer: {\n    width: '100%',\n    height: '100vh',\n    margin: 'auto'\n  },\n  paper: {\n    width: '50%',\n    margin: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(2),\n    width: 128,\n    height: 128\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Register(props) {\n  const classes = useStyles()\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [addUser] = useMutation(REGISTER_USER, {\n    update(\n      _,\n      {\n        data: { register: userData }\n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <div className=\"container\">\n      <CssBaseline />\n      <Grid container>\n      <Grid item xs={5} style={{ margin: '13rem 0' }} >\n      <div className={classes.paper}>\n      <SvgIcon className={classes.avatar}>\n              <Logo />\n      </SvgIcon>\n      <form onSubmit={onSubmit} noValidate className={classes.form}>\n      <TextField\n        fullWidth\n        margin= 'normal'\n        variant=\"outlined\"\n        label=\"Username\"\n        placeholder=\"Username..\"\n        name=\"username\"\n        type=\"text\"\n        value={values.username}\n        error={errors.username ? true : false}\n        onChange={onChange}\n        />\n        <br />\n        <TextField\n          fullWidth\n          margin= 'normal'\n          variant=\"outlined\"\n          label=\"Email\"\n          placeholder=\"Email..\"\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          error={errors.email ? true : false}\n          onChange={onChange}\n          />\n        <br />\n        <TextField\n          fullWidth\n          margin= 'normal'\n          variant=\"outlined\"\n          label=\"Password\"\n          placeholder=\"Password..\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n          />\n        <br />\n        <TextField\n          fullWidth\n          margin= 'normal'\n          variant=\"outlined\"\n          label=\"Confirm Password\"\n          placeholder=\"Confirm Password..\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n          />\n        <br />\n        <Button \n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Register\n        </Button>\n        <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\n                    {\"Already have an account? Login Here\"}\n                  </Link>\n                </Grid>\n              </Grid>\n          </form>\n          {Object.keys(errors).length > 0 && (\n            <div className=\"ui error message\">\n            <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n              ))}\n              </ul>\n              </div>\n              )}\n              </div>\n              </Grid>\n\n                <Grid item xs={7} className={classes.gridItem}>\n\n                </Grid> \n\n              </Grid>\n              </div>\n              );\n            }\n            \n            const REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Register;","import React, { useContext, useState, useRef } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Image,\n  Icon,\n  Label\n} from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\nimport MyPopup from '../util/MyPopup';\n\nfunction SinglePost(props) {\n  const postId = props.match.params.postId;\n  const { user } = useContext(AuthContext);\n  const commentInputRef = useRef(null);\n\n  const [comment, setComment] = useState('');\n\n  const {\n    data: { getPost }\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n    update() {\n      setComment('');\n      commentInputRef.current.blur();\n    },\n    variables: {\n      postId,\n      body: comment\n    }\n  });\n\n  function deletePostCallback() {\n    props.history.push('/');\n  }\n\n  let postMarkup;\n  if (!getPost) {\n    postMarkup = <p>Loading post..</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n\n    postMarkup = (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={2}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n              size=\"small\"\n              float=\"right\"\n            />\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>{username}</Card.Header>\n                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n                <Card.Description>{body}</Card.Description>\n              </Card.Content>\n              <hr />\n              <Card.Content extra>\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\n                <MyPopup content=\"Comment on post\">\n                  <Button\n                    as=\"div\"\n                    labelPosition=\"right\"\n                    onClick={() => console.log('Comment on post')}\n                  >\n                    <Button basic color=\"blue\">\n                      <Icon name=\"comments\" />\n                    </Button>\n                    <Label basic color=\"blue\" pointing=\"left\">\n                      {commentCount}\n                    </Label>\n                  </Button>\n                </MyPopup>\n                {user && user.username === username && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </Card.Content>\n            </Card>\n            {user && (\n              <Card fluid>\n                <Card.Content>\n                  <p>Post a comment</p>\n                  <Form>\n                    <div className=\"ui action input fluid\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Comment..\"\n                        name=\"comment\"\n                        value={comment}\n                        onChange={(event) => setComment(event.target.value)}\n                        ref={commentInputRef}\n                      />\n                      <button\n                        type=\"submit\"\n                        className=\"ui button teal\"\n                        disabled={comment.trim() === ''}\n                        onClick={submitComment}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </Form>\n                </Card.Content>\n              </Card>\n            )}\n            {comments.map((comment) => (\n              <Card fluid key={comment.id}>\n                <Card.Content>\n                  {user && user.username === comment.username && (\n                    <DeleteButton postId={id} commentId={comment.id} />\n                  )}\n                  <Card.Header>{comment.username}</Card.Header>\n                  <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\n                  <Card.Description>{comment.body}</Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return postMarkup;\n}\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n  mutation($postId: String!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        createdAt\n        username\n      }\n      commentCount\n    }\n  }\n`;\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nimport { AuthProvider } from './context/auth';\nimport AuthRoute from './util/AuthRoute';\n\nimport MenuBar from './components/MenuBar';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport SinglePost from './pages/SinglePost';\n\nfunction App() {\n  return (\n    <AuthProvider>\n    <Router>\n          <MenuBar />\n          <Route exact path='/' component={Home} />\n          <AuthRoute exact path='/login' component={Login} />\n          <AuthRoute exact path='/register' component={Register} />\n          <Route exact path=\"/posts/:postId\" component={SinglePost} />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport App from './App';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { setContext } from 'apollo-link-context';\n\nconst httpLink = createHttpLink({\n    uri: 'https://lit-river-19663.herokuapp.com/'\n});\n\n\nconst authLink = setContext(() => {\n    const token = localStorage.getItem('jwtToken');\n    return {\n        headers: {\n            Authorization: token ? `Bearer ${token}` : ''\n        }\n    }\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n});\n\nexport default (\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>\n)\n\n","import ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloProvider from './ApolloProvider'\n\nReactDOM.render(ApolloProvider, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}